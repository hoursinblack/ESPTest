-- Get the local player
local player = game.Players.LocalPlayer

-- Function to check if a player is in view
local function playerIsInView(targetPlayer)
    -- Perform raycasting or other checks to determine if the player is in view
    return true -- Replace this with your actual check
end

-- Function to find the nearest player in view
local function findNearestPlayerInView()
    local nearestPlayer = nil
    local nearestDistance = math.huge

    for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < nearestDistance and playerIsInView(otherPlayer) then
                nearestPlayer = otherPlayer
                nearestDistance = distance
            end
        end
    end

    return nearestPlayer
end

-- Function to lock onto the player's head
local function lockOntoPlayerHead(targetPlayer)
    if targetPlayer then
        local headPosition = targetPlayer.Character.Head.Position
        game.Workspace.CurrentCamera.CFrame = CFrame.new(headPosition + Vector3.new(0, 3, 0), headPosition)
    end
end

-- Run the script
while true do
    -- Find nearest player in view
    local nearestPlayer = findNearestPlayerInView()

    -- Lock onto player's head if they are in view
    lockOntoPlayerHead(nearestPlayer)

    wait(0.1) -- Adjust the delay as needed
end
